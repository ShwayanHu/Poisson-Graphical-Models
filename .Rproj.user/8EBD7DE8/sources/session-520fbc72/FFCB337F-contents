library(pheatmap)
library(XMRF)
library(pROC)
library(verification)

# load function
here::set_here()
source("./PGM_from_zero/get_D.R")
source("./PGM_from_zero/learn_edges.R")
source("./PGM_from_zero/ruc_aoc.R")
set.seed(1231)
# simulate data
sim <- XMRF.Sim(n = 300, p = 5, model = "TPGM", graph.type = "hub")
simDat <- sim$X
p <- nrow(simDat)
n <- ncol(simDat)

# Node-conditional distribution via GLM: P(Z) = exp(theta B(Z) - C(Z) - D(theta))
B <- function(x, R0, R) {
  ifelse(x <= R0, x,
         ifelse(x > R0 & x <= R, 
                -1/(2*(R-R0)) * x^2 + (R/(R-R0)) * x - (R0^2)/(2*(R-R0)),
                (R0 + R)/2))
}

C <- function(x) {
  return(log(factorial(x))) # Quadratic base measure
}

R = max(simDat)
THETA = learn_edge(
  method = "SPGM",
  data = simDat,
  sufficient_statistic = function(x) {B(x, R0 = 0, R = R)},
  base_measure = C,
  lambda = 1e4,
  M = 1e2
)

# verify if the AUC-ROC increases as the number of samples goes to infinity

roc_curve <- roc(as.numeric(sim$B), as.numeric(THETA))
with(
  roc_curve, 
  plot(
    1-specificities, 
    sensitivities, 
    type = 'l',
    main = "ROC for QPGM",
    xlab = "False Positive Rate",
    ylab = "True Positive Rate",
    xlim = c(0,1), ylim = c(0,1),
    lwd = 2
  )
)
axis(1, axTicks(1), labels=F)
lines(c(0, 1), c(0, 1), col="grey")
